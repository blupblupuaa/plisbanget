name: Sync Antares Data (Hydroponic Monitoring)

on:
  schedule:
    # Setiap 10 menit (sama dengan setting Vercel sebelumnya)
    - cron: "*/10 * * * *"

    # Alternatif jadwal (uncomment yang dibutuhkan):
    # - cron: '*/5 * * * *'    # Setiap 5 menit (real-time)
    # - cron: '*/15 * * * *'   # Setiap 15 menit (recommended)
    # - cron: '0 * * * *'      # Setiap jam

  # Bisa trigger manual dari GitHub UI
  workflow_dispatch:
    inputs:
      reason:
        description: "Reason for manual trigger"
        required: false
        default: "Manual test"

jobs:
  sync-hydroponic-data:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: üì° Sync Antares to Database
        id: sync
        run: |
          echo "üîÑ Starting sync process..."
          echo "Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"

          response=$(curl -s -w "\n%{http_code}" -X POST \
            ${{ secrets.VERCEL_PRODUCTION_URL }}/api/cron/sync-antares \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -H "Content-Type: application/json" \
            --max-time 30)

          http_code=$(echo "$response" | tail -n1)
          body=$(echo "$response" | head -n-1)

          echo "üìä HTTP Status: $http_code"
          echo "üì¶ Response Body:"
          echo "$body" | jq '.' 2>/dev/null || echo "$body"

          # Check if sync was successful
          if [ $http_code -eq 200 ]; then
            echo "‚úÖ Sync completed successfully!"
            echo "sync_status=success" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Sync failed with status $http_code"
            echo "sync_status=failed" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: üìã Log Sync Results
        if: always()
        run: |
          if [ "${{ steps.sync.outputs.sync_status }}" = "success" ]; then
            echo "::notice::‚úÖ Hydroponic data synced successfully from Antares"
          else
            echo "::error::‚ùå Failed to sync hydroponic data from Antares"
          fi

      - name: üîî Notify on Failure (Optional - Setup Discord/Telegram webhook)
        if: failure()
        run: |
          echo "‚ö†Ô∏è ALERT: Cron job failed!"
          echo "Check the logs above for details."
          echo "You can add Discord/Telegram notification here if needed."
          # Example Discord webhook:
          # curl -X POST ${{ secrets.DISCORD_WEBHOOK_URL }} \
          #   -H "Content-Type: application/json" \
          #   -d '{"content":"‚ùå Hydroponic sync failed! Check GitHub Actions logs."}'
